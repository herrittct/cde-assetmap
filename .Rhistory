mutate(sfa_name = str_to_lower(sfa_name)) %>%
mutate(free_students = free_perc * student_count) %>% # count of free students
mutate(redu_students = redu_perc * student_count) %>% # count of redu students
mutate(free_and_red_perc = free_perc + redu_perc) # combined free & redu
# Combines districts with GEOID number
geoid_districts <- left_join(districts, profiles, by = "CDE_AGREEMENT")
View(geoid_districts)
View(testing_98)
rm(testing_98)
testing_98 <- left_join(colorado_school,
colorado_income,
by = "GEOID")
View(testing_98)
testing_97 <- left_join(geoid_districts, testing_98, by = "GEOID")
View(testing_97)
library(readxl)
library(tidyverse)
library(dplyr)
library(stringr)
profiles <- read_excel("./data/SFA_profile_Feb_2019.xls",
col_types = c("text", "text", "text","logical",
"numeric","numeric", "numeric", "logical",
"logical", "logical",
"logical","logical"))
profiles <- profiles %>%
dplyr::rename(CDE_AGREEMENT = "Sponsor #",
day4 = "4 Day School Week",
student_count = "Pupil Count",
free_perc = "Free %",
redu_perc = "Reduced-Price %",
sbp = "Breakfast",
nslp = "Lunch",
smp = "Milk",
snack = "Snack",
sfsp = "SFSP",
sfa_name = "Sponsor Name") %>%
mutate(sfa_name = str_to_lower(sfa_name)) %>%
mutate(free_students = free_perc * student_count) %>% # count of free students
mutate(redu_students = redu_perc * student_count) %>% # count of redu students
mutate(free_and_red_perc = free_perc + redu_perc) # combined free & redu
# The above actually takes the raw excel into a semi-usable dataframe
profiles <- filter(profiles, Profile == "Public")
site_all <- read_excel("./data/CDE_to_GEOID.xlsx", col_types = "text")
site_all <- group_by(site_all,
CDE_AGREEMENT)
# Gets all the districts with their site count and GEOID
(districts <- summarise(site_all,
count = n(),
GEOID = first(GEOID)))
mean(districts$CDE_AGREEMENT)
rm(site_all)
site_all <- read_excel("./data/CDE_to_GEOID.xlsx", col_types = "text")
View(site_all)
site_all <- read_excel("./data/CDE_to_GEOID.xlsx", col_types = "text") %>%
mutate(GEOID = ACTUAL_GEOID)
site_all <- read_excel("./data/CDE_to_GEOID.xlsx", col_types = "text") %>%
mutate(GEOID = ACTUAL_GEOID) %>%
select(GEOID, CDE_AGREEMENT, everything(), -ACTUAL_GEOID)
site_all <- group_by(site_all,
CDE_AGREEMENT)
# Gets all the districts with their site count and GEOID
(districts <- summarise(site_all,
count = n(),
GEOID = first(GEOID)))
# Combines districts with GEOID number
geoid_districts <- left_join(districts, profiles, by = "CDE_AGREEMENT")
View(geoid_districts)
# Gets all the districts with their site count and GEOID
(districts <- summarise(site_all,
count_schools = n(),
GEOID = first(GEOID)))
# Combines districts with GEOID number
geoid_districts <- left_join(districts, profiles, by = "CDE_AGREEMENT")
library(tigris)
library(RQGIS)
library(tidycensus)
library(sf)
library(dplyr)
library(lwgeom)
library(stringr)
options(tigris_class = "sf")
tigris_use_cache = TRUE
apikey <- "69d8405e34b271517d234dcd4689e8df75836eff"
colorado_income <- get_acs(geography = "school district (unified)",
variables = "B19013_001",
state = "CO", key = apikey)
colorado_school <- school_districts(state = "CO",
type = "unified",
class = "sf")
co_school_joined <- left_join(colorado_school,
colorado_income,
by = "GEOID")
testing_98 <- left_join(colorado_school,
colorado_income,
by = "GEOID")
testing_97 <- left_join(geoid_districts, testing_98, by = "GEOID")
View(testing_97)
plot(testing_97["free_perc"], main = "test")
plot(co_school_joined["estimate"], main = "TEST")
testing_97 <- left_join(testing_98, geoid_districts, by = "GEOID")
plot(testing_97["free_perc"], main = "test")
View(testing_97)
plot(testing_97["NSLP"], main = "test")
plot(testing_97["nslp"], main = "test")
plot(testing_97["nslp"], main = "NSLP Participation")
combined_geo_dist <- left_join(co_school_joined, geoid_districts, by = "GEOID")
plot(combined_geo_dist["nslp"], main = "NSLP Updated")
plot(combined_geo_dist["nslp"], main = "NSLP Updated", legend())
plot(combined_geo_dist["nslp"], main = "NSLP Updated", legend(TRUE))
?legend
plot(combined_geo_dist["nslp"], main = "NSLP Updated", legend = TRUE)
plot(combined_geo_dist["nslp"], main = "NSLP Updated", legend.postition = "bottom")
plot(combined_geo_dist["nslp"], main = "NSLP Updated", legend.position = "bottom")
?plot
plot(combined_geo_dist["nslp"], main = "NSLP Updated", key.pos = 1 )
plot(combined_geo_dist["nslp"], main = "NSLP Updated", key.pos = 3 )
plot(combined_geo_dist["nslp"], main = "NSLP Updated", key.pos = 3, type = "b" )
View(combined_geo_dist)
plot(combined_geo_dist["sfsp"], main = "SFSP 2018")
library(readxl)
library(tidyverse)
library(dplyr)
library(stringr)
profiles <- read_excel("./data/SFA_profile_Feb_2019.xls",
col_types = c("text", "text", "text","logical",
"numeric","numeric", "numeric", "logical",
"logical", "logical",
"logical","logical"))
profiles <- profiles %>%
dplyr::rename(CDE_AGREEMENT = "Sponsor #",
day4 = "4 Day School Week",
student_count = "Pupil Count",
free_perc = "Free %",
redu_perc = "Reduced-Price %",
sbp = "Breakfast",
nslp = "Lunch",
smp = "Milk",
snack = "Snack",
sfsp = "SFSP",
sfa_name = "Sponsor Name") %>%
mutate(sfa_name = str_to_lower(sfa_name)) %>%
mutate(free_students = free_perc * student_count) %>% # count of free students
mutate(redu_students = redu_perc * student_count) %>% # count of redu students
mutate(free_and_red_perc = free_perc + redu_perc) # combined free & redu
# Import the monthly meal count data to see what is looks like
meal_count_excel <- paste0("C:/Users/CHerr/OneDrive/Documents/CDEMapping,
/cde-assetmap/data/Monthlymealcount_1718.xls")
raw_monthly_meal_count <- read_excel(meal_count_excel)
# Import the monthly meal count data to see what is looks like
meal_count_excel <- paste0("C:/Users/CHerr/OneDrive/Documents/CDEMapping
/cde-assetmap/data/Monthlymealcount_1718.xls")
raw_monthly_meal_count <- read_excel(meal_count_excel)
# Import the monthly meal count data to see what is looks like
meal_count_excel <- paste0("C:/Users/CHerr/OneDrive/Documents/CDEMapping",
"/cde-assetmap/data/Monthlymealcount_1718.xls")
raw_monthly_meal_count <- read_excel(meal_count_excel)
View(raw_monthly_meal_count)
View(profiles)
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #")
str_pad(sfa_numbers, 4, pad = "0")
str_pad(sfa_numbers, width = 4, pad = "0", side = "left")
View(sfa_numbers)
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #") %>%
mutate(sfa_num = "SFA #")
str_pad(sfa_numbers$sfa_num, width = 4, pad = "0", side = "left")
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #") %>%
rename(sfa_num = "SFA #")
str_pad(sfa_numbers$sfa_num, width = 4, pad = "0", side = "left")
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #") %>%
rename(sfa_num = "SFA #") %>%
str_pad(sfa_numbers$sfa_num, width = 4, pad = "0", side = "left")
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #") %>%
rename(sfa_num = "SFA #") %>%
str_pad(sfa_num, width = 4, pad = "0", side = "left")
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #") %>%
rename(sfa_num = "SFA #") %>%
str_pad(width = 4, pad = "0", side = "left")
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #") %>%
rename(sfa_num = "SFA #") %>%
sfa_numbers$sfa_num <- str_pad(sfa_numbers$sfa_num,
width = 4,
pad = "0",
side = "left")
sfa_numbers <- select(raw_monthly_meal_count,
"SFA #") %>%
rename(sfa_num = "SFA #")
sfa_numbers$sfa_num <- str_pad(sfa_numbers$sfa_num,
width = 4,
pad = "0",
side = "left")
raw_monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #")
raw_monthly_meal_count <- str_pad(raw_monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
raw_monthly_meal_count <- read_excel(meal_count_excel)
raw_monthly_meal_count$sfa_num <- str_pad(raw_monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
raw_monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #")
raw_monthly_meal_count$sfa_num <- str_pad(raw_monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
View(raw_monthly_meal_count)
raw_monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #")
raw_monthly_meal_count <- read_excel(meal_count_excel)
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #")
monthly_meal_count$sfa_num <- str_pad(monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
monthly_meal_count$site_num <- str_pad(monthly_meal_count$site_num,
width = 4,
side = "left",
pad = "0")
View(monthly_meal_count)
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "SCHOOL FOOD AUTHORITY NAME",
site_name = "SITE NAME",
claim_date = "Claim Date"
days_served_count = "Days Served Qty")
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "SCHOOL FOOD AUTHORITY NAME",
site_name = "SITE NAME",
claim_date = "Claim Date",
days_served_count = "Days Served Qty")
raw_monthly_meal_count <- read_excel(meal_count_excel)
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "SCHOOL FOOD AUTHORITY NAME",
site_name = "SITE NAME",
claim_date = "Claim Date",
days_served_count = "Days Served Qty")
View(raw_monthly_meal_count)
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "School Food Authority Name",
site_name = "Site Name",
claim_date = "Claim Date",
days_served_count = "DaysServedQty")
View(monthly_meal_count)
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "School Food Authority Name",
site_name = "Site Name",
claim_date = "Claim Date",
days_served_count = "DaysServedQty",
rate_level = "Rate Level") %>%
select(everything(), -"Earning Type")
monthly_meal_count$sfa_num <- str_pad(monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
monthly_meal_count$site_num <- str_pad(monthly_meal_count$site_num,
width = 4,
side = "left",
pad = "0")
library(lubridate)
monthly_meal_count$claim_date <- mutate(monthly_meal_count,
claim_date = ymd(claim_date))
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "School Food Authority Name",
site_name = "Site Name",
claim_date = "Claim Date",
days_served_count = "DaysServedQty",
rate_level = "Rate Level") %>%
select(everything(), -"Earning Type")
monthly_meal_count$sfa_num <- str_pad(monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
monthly_meal_count$site_num <- str_pad(monthly_meal_count$site_num,
width = 4,
side = "left",
pad = "0")
monthly_meal_count <- mutate(monthly_meal_count,
claim_date = ymd(claim_date))
class(claim_date)
class(monthly_meal_count$claim_date)
base::plot(monthly_meal_count, x = claim_date, y = Total_Meals_Served)
ggplot(data = monthly_meal_count, x = claim_date, y = Total_Meals_Served)
ggplot(data = monthly_meal_count,
mapping = aes(x = claim_date, y = Total_Meals_Served))
monthly_meal_count %>%
ggplot(aes(x = claim_date, y = Total_Meals_Served))
monthly_meal_count %>%
ggplot(aes(x = claim_date, y = Total_Meals_Served)) +
geom_freqpoly()
monthly_meal_count %>%
ggplot(aes(x = Total_Meals_Served)) +
geom_freqpoly()
monthly_meal_count %>%
ggplot(aes(x = Total_Meals_Served)) +
geom_freqpoly(binwidth = 86400)
monthly_meal_count %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date))
monthly_meal_count %>%
group_by(sfa_num)
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date, color = sfa_num))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date, color = sfa_num)) +
facet_grid(~rate_level, n = 2)
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date, color = sfa_num)) +
facet_grid(~rate_level, nrow = 2)
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date, color = sfa_num)) +
facet_wrap(~rate_level, nrow = 2)
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date, color = "blue")) +
facet_wrap(~rate_level, nrow = 2)
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date, color = "blue"), position = "jitter") +
facet_wrap(~rate_level, nrow = 2)
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date, color = "blue"), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(x = Total_Meals_Served, y = claim_date, color = "blue"))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(x = Total_Meals_Served, y = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(x = Total_Meals_Served, y = claim_date))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = mean(Total_Meals_Served), x = claim_date))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = log2(Total_Meals_Served), x = claim_date))
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
# Maps the total meals served over the course of the year
monthly_meal_count %>%
group_by(sfa_num, year(claim_date)) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
# Maps the total meals served over the course of the year
monthly_meal_count %>%
group_by(sfa_num, year(claim_date)) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~claim_date, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
# Maps the total meals served over the course of the year
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
# Maps the total meals served over the course of the year by each sfa
# This kinda stuff is really cool
monthly_meal_count %>%
group_by(sfa_num, Meal Type) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
# Maps the total meals served over the course of the year by each sfa
# This kinda stuff is really cool
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
meal_type = "Meal Type") %>%
select(everything(), -"Earning Type")
# This all works to change the SFA number to a 4 digit character
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "School Food Authority Name",
site_name = "Site Name",
claim_date = "Claim Date",
days_served_count = "DaysServedQty",
rate_level = "Rate Level",
meal_type = "Meal Type") %>%
select(everything(), -"Earning Type")
# Creates characters that can match with with the other character plots
monthly_meal_count$sfa_num <- str_pad(monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
monthly_meal_count$site_num <- str_pad(monthly_meal_count$site_num,
width = 4,
side = "left",
pad = "0")
# Takes the claim date to a date class
monthly_meal_count <- mutate(monthly_meal_count,
claim_date = ymd(claim_date))
class(monthly_meal_count$claim_date)
# Maps the total meals served over the course of the year by each sfa
# This kinda stuff is really cool
monthly_meal_count %>%
group_by(sfa_num) %>%
ggplot() +
geom_point(aes(y = Total_Meals_Served, x = claim_date), position = "jitter") +
facet_wrap(~rate_level, nrow = 2) +
geom_smooth(aes(y = Total_Meals_Served, x = claim_date))
install.packages("forcats")
library(forcats)
library("forcats", lib.loc="~/R/win-library/3.5")
# This all works to change the SFA number to a 4 digit character
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "School Food Authority Name",
site_name = "Site Name",
claim_date = "Claim Date",
days_served_count = "DaysServedQty",
rate_level = "Rate Level",
meal_type = "Meal Type") %>%
select(everything(), -"Earning Type") %>%
mutate(claim_date = ymd(claim_date),
year = year(claim_date))
# Creates characters that can match with with the other character plots
monthly_meal_count$sfa_num <- str_pad(monthly_meal_count$sfa_num,
width = 4,
side = "left",
pad = "0")
monthly_meal_count$site_num <- str_pad(monthly_meal_count$site_num,
width = 4,
side = "left",
pad = "0")
# This all works to change the SFA number to a 4 digit character
monthly_meal_count <- rename(raw_monthly_meal_count,
sfa_num = "SFA #",
site_num = "Site #",
sfa_name = "School Food Authority Name",
site_name = "Site Name",
claim_date = "Claim Date",
days_served_count = "DaysServedQty",
rate_level = "Rate Level",
meal_type = "Meal Type") %>%
select(everything(), -"Earning Type") %>%
mutate(claim_date = ymd(claim_date),
year = year(claim_date),
month = month(claim_date))
source('~/.active-rstudio-document')
source('~/CDEMapping/cde-assetmap/mealcount.r')
View(profiles)
View(monthly_meal_count)
